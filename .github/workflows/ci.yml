name: CI

on:
  push:
    branches:
      - master
      - beta
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - '*'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3.0.4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile
      # - run: echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc
      - name: 执行 Lint
        run: yarn lint
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - lint
    # Trigger release for only pushes to branches defined above
    if: ${{github.event_name == 'push'&& (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/beta' ) }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: pnpm i
      - run: pnpm run build
      # Release using semantic-release.
      # While this runs on all branches, it will only release latest from master
      - uses: docker://ghcr.io/virgoone/semantic-release-action:latest
        with:
          tag_format: 'v${version}'
          extends: '@semantic-release/apm-config'
          plugins: |
            ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', '@semantic-release/changelog', '@semantic-release/npm', '@semantic-release/github', '@semantic-release/git']
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
